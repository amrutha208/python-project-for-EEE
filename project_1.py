# -*- coding: utf-8 -*-
"""project-1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rTsbAr-R_Jt4pe7GbzzU8V156DpfBJM3
"""

import numpy as np
n = 3
bus_type = [0, 1, 2]
V_mag = np.array([1.06, 1.00, 1.00])
V_ang = np.radians(np.array([0.0, 0.0, 0.0]))
V = V_mag * np.exp(1j * V_ang)
P_spec = np.array([0.0, 0.5, -0.6])
Q_spec = np.array([0.0, 0.0, -0.25])
Y = np.array([
    [10-20j, -5+10j, -5+10j],
    [-5+10j, 10-20j, -5+10j],
    [-5+10j, -5+10j, 10-20j]
], dtype=complex)
tolerance = 1e-6
max_iter = 100
for iteration in range(max_iter):
    V_prev = V.copy()
    for i in range(n):
        if bus_type[i] == 0:
            continue
        sum_YV = 0
        for j in range(n):
            if j != i:
                sum_YV += Y[i, j] * V[j]
        if bus_type[i] == 2:
            S = P_spec[i] + 1j * Q_spec[i]
            V[i] = (1 / Y[i, i]) * ((S / np.conj(V[i])) - sum_YV)

        elif bus_type[i] == 1:
            Q_calc = -np.imag(np.conj(V[i]) * sum(Y[i, j] * V[j] for j in range(n)))
            S = P_spec[i] + 1j * Q_calc
            V_temp = (1 / Y[i, i]) * ((S / np.conj(V[i])) - sum_YV)
            V[i] = V_mag[i] * np.exp(1j * np.angle(V_temp))
    error = np.max(np.abs(V - V_prev))
    if error < tolerance:
        print(f"\n Power flow converged in {iteration+1} iterations.\n")
        break
else:
    print("\n Did not converge within max iterations.\n")
for i in range(n):
    print(f"Bus {i+1}: |V| = {abs(V[i]):.4f} pu, Angle = {np.degrees(np.angle(V[i])):.4f}Â°")